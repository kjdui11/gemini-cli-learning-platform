const fs = require('fs');
const path = require('path');

// Complete Hindi basic commands translation with correct structure
const hindiBasicCommands = {
  "hero": {
    "title": "‡§¨‡•Å‡§®‡§ø‡§Ø‡§æ‡§¶‡•Ä ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§∏‡§Ç‡§ö‡§æ‡§≤‡§®",
    "subtitle": "Gemini CLI ‡§ï‡•á ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§î‡§∞ ‡§∏‡§Ç‡§ö‡§æ‡§≤‡§® ‡§∏‡§ø‡§Ç‡§ü‡•à‡§ï‡•ç‡§∏ ‡§Æ‡•á‡§Ç ‡§Æ‡§π‡§æ‡§∞‡§§ ‡§π‡§æ‡§∏‡§ø‡§≤ ‡§ï‡§∞‡•á‡§Ç",
    "comprehensive": "‡§µ‡•ç‡§Ø‡§æ‡§™‡§ï ‡§ï‡§µ‡§∞‡•á‡§ú",
    "practical": "‡§µ‡•ç‡§Ø‡§æ‡§µ‡§π‡§æ‡§∞‡§ø‡§ï ‡§â‡§¶‡§æ‡§π‡§∞‡§£"
  },
  "overview": {
    "title": "‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§Ö‡§µ‡§≤‡•ã‡§ï‡§®",
    "description": "Gemini CLI ‡§§‡•Ä‡§® ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•á ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§§‡§æ ‡§π‡•à: CLI ‡§ï‡•ã ‡§®‡§ø‡§Ø‡§Ç‡§§‡•ç‡§∞‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡•ç‡§≤‡•à‡§∂ ‡§ï‡§Æ‡§æ‡§Ç‡§°, ‡§´‡§º‡§æ‡§á‡§≤ ‡§∏‡§Ç‡§ö‡§æ‡§≤‡§® ‡§ï‡•á ‡§≤‡§ø‡§è @ ‡§ï‡§Æ‡§æ‡§Ç‡§°, ‡§î‡§∞ ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§®‡§ø‡§∑‡•ç‡§™‡§æ‡§¶‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ! ‡§ï‡§Æ‡§æ‡§Ç‡§°‡•§"
  },
  "categories": {
    "slash": {
      "title": "‡§∏‡•ç‡§≤‡•à‡§∂ ‡§ï‡§Æ‡§æ‡§Ç‡§° (/)",
      "description": "CLI ‡§ï‡•ã ‡§®‡§ø‡§Ø‡§Ç‡§§‡•ç‡§∞‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡•á‡§ü‡§æ-‡§∏‡•ç‡§§‡§∞‡•Ä‡§Ø ‡§ï‡§Æ‡§æ‡§Ç‡§°",
      "commands": {
        "help": "‡§∏‡§≠‡•Ä ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§î‡§∞ ‡§â‡§®‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç",
        "clear": "‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§¨‡§æ‡§§‡§ö‡•Ä‡§§ ‡§á‡§§‡§ø‡§π‡§æ‡§∏ ‡§∏‡§æ‡§´‡§º ‡§ï‡§∞‡•á‡§Ç",
        "quit": "Gemini CLI ‡§∏‡•á ‡§¨‡§æ‡§π‡§∞ ‡§®‡§ø‡§ï‡§≤‡•á‡§Ç",
        "theme": "‡§∞‡§Ç‡§ó ‡§•‡•Ä‡§Æ ‡§¨‡§¶‡§≤‡•á‡§Ç (‡§π‡§≤‡•ç‡§ï‡§æ/‡§ó‡§π‡§∞‡§æ/‡§ë‡§ü‡•ã)"
      }
    },
    "at": {
      "title": "@ ‡§ï‡§Æ‡§æ‡§Ç‡§°",
      "description": "‡§´‡§º‡§æ‡§á‡§≤ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§ï‡•ã ‡§™‡§¢‡§º‡§®‡•á ‡§î‡§∞ ‡§∏‡§Ç‡§™‡§æ‡§¶‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§â‡§™‡§Ø‡•ã‡§ó",
      "commands": {
        "file": "‡§®‡§ø‡§∞‡•ç‡§¶‡§ø‡§∑‡•ç‡§ü ‡§´‡§º‡§æ‡§á‡§≤ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§ï‡•ã ‡§¨‡§æ‡§§‡§ö‡•Ä‡§§ ‡§Æ‡•á‡§Ç ‡§™‡§¢‡§º‡•á‡§Ç",
        "folder": "‡§´‡§º‡•ã‡§≤‡•ç‡§°‡§∞ ‡§Æ‡•á‡§Ç ‡§´‡§º‡§æ‡§á‡§≤ ‡§∏‡•Ç‡§ö‡•Ä ‡§™‡§¢‡§º‡•á‡§Ç",
        "wildcard": "‡§ï‡§à ‡§´‡§º‡§æ‡§á‡§≤‡•ã‡§Ç ‡§∏‡•á ‡§Æ‡•á‡§≤ ‡§ñ‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§æ‡§á‡§≤‡•ç‡§°‡§ï‡§æ‡§∞‡•ç‡§° ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç"
      }
    },
    "exclamation": {
      "title": "! ‡§ï‡§Æ‡§æ‡§Ç‡§°",
      "description": "‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§®‡§ø‡§∑‡•ç‡§™‡§æ‡§¶‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ ‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç",
      "commands": {
        "system": "‡§ï‡•ã‡§à ‡§≠‡•Ä ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§®‡§ø‡§∑‡•ç‡§™‡§æ‡§¶‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç",
        "git": "Git ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§®‡§ø‡§∑‡•ç‡§™‡§æ‡§¶‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç",
        "npm": "NPM ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§®‡§ø‡§∑‡•ç‡§™‡§æ‡§¶‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç"
      }
    }
  },
  "examples": {
    "title": "‡§µ‡•ç‡§Ø‡§æ‡§µ‡§π‡§æ‡§∞‡§ø‡§ï ‡§â‡§¶‡§æ‡§π‡§∞‡§£",
    "description": "‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï ‡§™‡§∞‡§ø‡§¶‡•É‡§∂‡•ç‡§Ø‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•à‡§∏‡•á ‡§ï‡§∞‡•á‡§Ç",
    "scenarios": [
      {
        "title": "‡§ï‡•ã‡§° ‡§∏‡§Æ‡•Ä‡§ï‡•ç‡§∑‡§æ",
        "description": "‡§´‡§º‡§æ‡§á‡§≤ ‡§™‡§¢‡§º‡•á‡§Ç ‡§î‡§∞ ‡§∏‡•Å‡§ß‡§æ‡§∞ ‡§∏‡•Å‡§ù‡§æ‡§è‡§Ç",
        "command": "@src/components/Button.tsx ‡§á‡§∏ ‡§ï‡§Ç‡§™‡•ã‡§®‡•á‡§Ç‡§ü ‡§ï‡•Ä ‡§∏‡§Æ‡•Ä‡§ï‡•ç‡§∑‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§∏‡•Å‡§ß‡§æ‡§∞ ‡§∏‡•Å‡§ù‡§æ‡§è‡§Ç"
      },
      {
        "title": "‡§°‡§ø‡§¨‡§ó‡§ø‡§Ç‡§ó ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ",
        "description": "‡§§‡•ç‡§∞‡•Å‡§ü‡§ø ‡§≤‡•â‡§ó ‡§ï‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡§∞‡•á‡§Ç",
        "command": "@logs/error.log ‡§á‡§∏ ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø ‡§≤‡•â‡§ó ‡§ï‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§ø‡§§ ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§® ‡§∏‡•Å‡§ù‡§æ‡§è‡§Ç"
      },
      {
        "title": "‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º‡•Ä‡§ï‡§∞‡§£",
        "description": "‡§ï‡•ã‡§° ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º‡•Ä‡§ï‡§∞‡§£ ‡§â‡§§‡•ç‡§™‡§®‡•ç‡§® ‡§ï‡§∞‡•á‡§Ç",
        "command": "@src/utils/ ‡§á‡§® ‡§â‡§™‡§Ø‡•ã‡§ó‡§ø‡§§‡§æ ‡§´‡§º‡§Ç‡§ï‡•ç‡§∂‡§® ‡§ï‡•á ‡§≤‡§ø‡§è README ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º‡•Ä‡§ï‡§∞‡§£ ‡§¨‡§®‡§æ‡§è‡§Ç"
      }
    ]
  },
  "tips": {
    "title": "‡§â‡§™‡§Ø‡•ã‡§ó ‡§Ø‡•Å‡§ï‡•ç‡§§‡§ø‡§Ø‡§æ‡§Ç",
    "info": {
      "title": "‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§∏‡§Ç‡§Ø‡•ã‡§ú‡§®",
      "content": "‡§Ü‡§™ ‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§¶‡§ï‡•ç‡§∑‡§§‡§æ ‡§Æ‡•á‡§Ç ‡§∏‡•Å‡§ß‡§æ‡§∞ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§ï ‡§π‡•Ä ‡§¨‡§æ‡§§‡§ö‡•Ä‡§§ ‡§Æ‡•á‡§Ç ‡§ï‡§à ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞‡•ã‡§Ç ‡§ï‡•ã ‡§ú‡•ã‡§°‡§º ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§"
    },
    "warning": {
      "title": "‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§Ö‡§®‡•Å‡§∏‡•ç‡§Æ‡§æ‡§∞‡§ï",
      "content": "! ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§∏‡§æ‡§µ‡§ß‡§æ‡§® ‡§∞‡§π‡•á‡§Ç, ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡§ø ‡§Ü‡§™ ‡§∏‡§Æ‡§ù‡§§‡•á ‡§π‡•à‡§Ç ‡§ï‡§ø ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡•ç‡§Ø‡§æ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à, ‡§ñ‡§§‡§∞‡§®‡§æ‡§ï ‡§∏‡§Ç‡§ö‡§æ‡§≤‡§® ‡§∏‡•á ‡§¨‡§ö‡•á‡§Ç‡•§"
    },
    "success": {
      "title": "‡§∏‡§∞‡•ç‡§µ‡•ã‡§§‡•ç‡§§‡§Æ ‡§™‡•ç‡§∞‡§•‡§æ‡§è‡§Ç",
      "content": "‡§∏‡§≠‡•Ä ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§¶‡•á‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡§π‡§≤‡•á /help ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∂ ‡§ï‡•Ä ‡§ú‡§æ‡§§‡•Ä ‡§π‡•à, ‡§´‡§ø‡§∞ ‡§ß‡•Ä‡§∞‡•á-‡§ß‡•Ä‡§∞‡•á ‡§µ‡§ø‡§≠‡§ø‡§®‡•ç‡§® ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡•á ‡§â‡§™‡§Ø‡•ã‡§ó ‡§∏‡•Ä‡§ñ‡•á‡§Ç‡•§"
    }
  },
  "nextSteps": {
    "title": "‡§Ö‡§ó‡§≤‡•á ‡§ï‡§¶‡§Æ",
    "description": "‡§Ö‡§¨ ‡§ú‡§¨ ‡§Ü‡§™‡§®‡•á ‡§¨‡•Å‡§®‡§ø‡§Ø‡§æ‡§¶‡•Ä ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§Æ‡•á‡§Ç ‡§Æ‡§π‡§æ‡§∞‡§§ ‡§π‡§æ‡§∏‡§ø‡§≤ ‡§ï‡§∞ ‡§≤‡•Ä ‡§π‡•à, ‡§§‡•ã ‡§Ü‡§™ ‡§Ö‡§ß‡§ø‡§ï ‡§â‡§®‡•ç‡§®‡§§ ‡§∏‡•Å‡§µ‡§ø‡§ß‡§æ‡§è‡§Ç ‡§∏‡•Ä‡§ñ‡§®‡§æ ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç:",
    "fileOperations": "‡§´‡§º‡§æ‡§á‡§≤ ‡§∏‡§Ç‡§ö‡§æ‡§≤‡§® ‡§µ‡§ø‡§µ‡§∞‡§£",
    "advancedConfig": "‡§â‡§®‡•ç‡§®‡§§ ‡§ï‡•â‡§®‡•ç‡§´‡§º‡§ø‡§ó‡§∞‡•á‡§∂‡§®",
    "backToGuides": "‡§ó‡§æ‡§á‡§° ‡§™‡§∞ ‡§µ‡§æ‡§™‡§∏ ‡§ú‡§æ‡§è‡§Ç"
  }
};

// Function to verify and update Hindi basic commands
function updateHindiBasicCommands() {
  const filePath = path.join(__dirname, '..', 'src', 'messages', 'hi.json');
  
  try {
    const data = JSON.parse(fs.readFileSync(filePath, 'utf8'));
    
    // Update the guidesBasicCommands section
    data.guidesBasicCommands = hindiBasicCommands;
    
    // Write back to file
    fs.writeFileSync(filePath, JSON.stringify(data, null, 2), 'utf8');
    console.log('‚úÖ Updated Hindi basic commands with complete structure');
    
    // Verify the structure
    const newData = JSON.parse(fs.readFileSync(filePath, 'utf8'));
    const basicCommands = newData.guidesBasicCommands;
    
    console.log('üìã Verification:');
    console.log(`   - Hero title: "${basicCommands?.hero?.title || 'N/A'}"`);
    console.log(`   - Categories: ${Object.keys(basicCommands?.categories || {}).length}`);
    console.log(`   - Category names: ${Object.keys(basicCommands?.categories || {}).join(', ')}`);
    console.log(`   - Examples: ${basicCommands?.examples?.scenarios?.length || 0}`);
    console.log(`   - Tips structure: ${Object.keys(basicCommands?.tips || {}).filter(k => k !== 'title').join(', ')}`);
    
    // Check specific command structures
    const slashCommands = basicCommands?.categories?.slash?.commands;
    const atCommands = basicCommands?.categories?.at?.commands;
    const exclamationCommands = basicCommands?.categories?.exclamation?.commands;
    
    console.log(`   - Slash commands: ${Object.keys(slashCommands || {}).length}`);
    console.log(`   - @ commands: ${Object.keys(atCommands || {}).length}`);
    console.log(`   - ! commands: ${Object.keys(exclamationCommands || {}).length}`);
    
    console.log('\nüéØ Hindi basic commands structure is now complete and correct!');
    
  } catch (error) {
    console.error('‚ùå Error updating Hindi basic commands:', error.message);
  }
}

// Run the update
console.log('üîß Updating Hindi basic commands structure...\n');
updateHindiBasicCommands();
